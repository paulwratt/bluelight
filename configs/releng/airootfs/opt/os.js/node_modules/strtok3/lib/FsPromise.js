"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const fs = require("fs");
/**
 * Convert fs functions to promise based functions
 */
class FsPromise {
    constructor() {
        this.pathExists = fs.existsSync;
        this.createReadStream = fs.createReadStream;
    }
    close(fd) {
        return new Promise((resolve, reject) => {
            fs.close(fd, err => {
                if (err)
                    reject(err);
                else
                    resolve();
            });
        });
    }
    stat(path) {
        return new Promise((resolve, reject) => {
            fs.stat(path, (err, stats) => {
                if (err)
                    reject(err);
                else
                    resolve(stats);
            });
        });
    }
    open(path, mode) {
        return new Promise((resolve, reject) => {
            fs.open(path, mode, (err, fd) => {
                if (err)
                    reject(err);
                else
                    resolve(fd);
            });
        });
    }
    read(fd, buffer, offset, length, position) {
        return new Promise((resolve, reject) => {
            fs.read(fd, buffer, offset, length, position, (err, bytesRead, _buffer) => {
                if (err)
                    reject(err);
                else
                    resolve({ bytesRead, buffer: _buffer });
            });
        });
    }
    writeFile(path, data) {
        return new Promise((resolve, reject) => {
            fs.writeFile(path, data, err => {
                if (err)
                    reject(err);
                else
                    resolve();
            });
        });
    }
    writeFileSync(path, data) {
        fs.writeFileSync(path, data);
    }
    readFile(path) {
        return new Promise((resolve, reject) => {
            fs.readFile(path, (err, buffer) => {
                if (err)
                    reject(err);
                else
                    resolve(buffer);
            });
        });
    }
}
exports.FsPromise = FsPromise;
