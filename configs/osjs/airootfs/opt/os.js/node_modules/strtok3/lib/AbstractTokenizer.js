"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const type_1 = require("./type");
class AbstractTokenizer {
    constructor() {
        this.position = 0;
        this.numBuffer = Buffer.alloc(4);
    }
    readToken(token, position = null) {
        const buffer = Buffer.alloc(token.len);
        return this.readBuffer(buffer, 0, token.len, position).then(len => {
            if (len < token.len)
                throw new Error(type_1.endOfFile);
            return token.get(buffer, 0);
        });
    }
    peekToken(token, position = this.position) {
        const buffer = Buffer.alloc(token.len);
        return this.peekBuffer(buffer, 0, token.len, position).then(len => {
            if (len < token.len)
                throw new Error(type_1.endOfFile);
            return token.get(buffer, 0);
        });
    }
    readNumber(token) {
        return this.readBuffer(this.numBuffer, 0, token.len, null).then(len => {
            if (len < token.len)
                throw new Error(type_1.endOfFile);
            return token.get(this.numBuffer, 0);
        });
    }
    peekNumber(token) {
        return this.peekBuffer(this.numBuffer, 0, token.len).then(len => {
            if (len < token.len)
                throw new Error(type_1.endOfFile);
            return token.get(this.numBuffer, 0);
        });
    }
}
exports.AbstractTokenizer = AbstractTokenizer;
